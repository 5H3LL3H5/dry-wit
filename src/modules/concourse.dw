## Runs a fly command.
## -> 1: Whether to assume 'y' or 'n' to any question.
## -> 2..: command to run.
## <- 0/${TRUE} if the command succeeds; 1/${FALSE} otherwise.
## Example:
##   if runFlyCommand y -t ci set-pipeline -p main; then
##     echo "fly -t ci set-pipeline -p main -> ${RESULT}";
##   fi
function runFlyCommand() {
  local _yesOrNo="${1}";
  shift;
  local _args="${@}";
  local -i _rescode;
  local _result;

  checkNotEmpty "yesOrNo" "${_yesOrNo}" 1;
  checkNotEmpty "args" "${_args}" 2;

  case "${_yesOrNo}" in
    y | yes | Y | YES) _yesOrNo="y";
                       ;;
    n | no | N | NO) _yesOrNo="n";
                     ;;
    *) exitWithErrorCode RUN_FLY_COMMAND_Y_N_REQUIRED;
       ;;
  esac

  echo "fly $(echo "${_args}" | tr '\n' ' ') 2>&1" >> "${TRACE_FILE}";
  logTrace -n "fly $(echo "${_args}" | tr '\n' ' ') 2>&1";
  if [[ "${_yesOrNo}" == "y" ]]; then
    _result="$(yes | fly $(echo "${_args}"))";
  else
    _result="$(yes n | fly $(echo "${_args}"))";
  fi
  _rescode=$?;
  if isTrue ${_rescode}; then
    logTraceResult SUCCESS "done";
  else
    _rescode=${TRUE};
    logTraceResult WARNING "failed";
  fi

  export RESULT="${_result}";

  return ${_rescode};
}

## Runs a fly login command.
## -> 1: The Concourse target.
## -> 2: The Concourse url.
## <- 0/${TRUE} if the command succeeds; 1/${FALSE} otherwise.
## Example:
##   if flyLogin ci http://concourse:8080; then
##     echo "fly -t ci login -c http://concourse:8080 -> ${RESULT}";
##   fi
function flyLogin() {
  local _concourseTarget="${1}";
  local _concourseUrl="${2}";
  local -i _rescode;
  local _output;
  local _fly="$(which fly)";

  checkNotEmpty "target" "${_concourseTarget}" 1;
  checkNotEmpty "url" "${_concourseUrl}" 2;

  logTrace -n "${_fly} -t ${_concourseTarget} login -c ${_concourseUrl} 2>&1";
  echo "${_fly} -t ${_concourseTarget} login -c ${_concourseUrl}" >> "${TRACE_FILE}"
  exec 5>&1
  _output=$(${FLY_PATH} -t ${_concourseTarget} login -c ${_concourseUrl} 2>&1 | tee >(cat - >&5))
  _rescode=$?;
  echo ${_output};
  if isTrue ${_rescode}; then
    logTraceResult SUCCESS "done";
  else
    _rescode=${FALSE};
    logTraceResult FAILURE "failed";
    export RESULT="${_output}";
  fi

  return ${_rescode};
}



